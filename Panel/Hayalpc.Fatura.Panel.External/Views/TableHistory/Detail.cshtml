@model TableHistoryVM
<div class="row">
    <div class="col-sm-6">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">@tr.Get("General")</h3>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">@Html.DisplayNameFor(x => x.Id)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(x => x.Id)</dd>
                    <dt class="col-sm-4">@Html.DisplayNameFor(x => x.ActionType)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(x => x.ActionType)</dd>
                    <dt class="col-sm-4">@Html.DisplayNameFor(x => x.ActionDetail)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(x => x.ActionDetail)</dd>
                    <dt class="col-sm-4">@Html.DisplayNameFor(x => x.ModelName)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(x => x.ModelName)</dd>
                    <dt class="col-sm-4">@Html.DisplayNameFor(x => x.DataId)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(x => x.DataId)</dd>
                    <dt class="col-sm-4">@Html.DisplayNameFor(x => x.Note)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(x => x.Note)</dd>
                    <dt class="col-sm-4">@Html.DisplayNameFor(x => x.RoleId1)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(x => x.RoleId1)</dd>
                    <dt class="col-sm-4">@Html.DisplayNameFor(x => x.RoleId2)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(x => x.RoleId2)</dd>
                    <dt class="col-sm-4">@Html.DisplayNameFor(x => x.Status)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(x => x.Status)</dd>
                </dl>
            </div>
        </div>
    </div>
    <div class="col-sm-6">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">@tr.Get("Creation")</h3>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">@Html.DisplayNameFor(x => x.CreateTime)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(x => x.CreateTime)</dd>
                    <dt class="col-sm-4">@Html.DisplayNameFor(x => x.CreateUserId)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(x => x.CreateUserId)</dd>
                    <dt class="col-sm-4">@Html.DisplayNameFor(x => x.UpdateTime)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(x => x.UpdateTime)</dd>
                    <dt class="col-sm-4">@Html.DisplayNameFor(x => x.UpdateUserId)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(x => x.UpdateUserId)</dd>
                </dl>
            </div>
        </div>
    </div>


    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">@tr.Get("Data")</h3>
            </div>
            <div class="card-body">
                <dl class="row" id="data_row">
                    @{
                        if (Model.ActionType == ActionType.Insert || Model.ActionType == ActionType.Delete)
                        {
                            <dd class="col-sm-6"><b>@tr.Get("Field")</b></dd>
                            <dd class="col-sm-6"><b>@tr.Get("Values")</b></dd>
                        }
                        else if (Model.ActionType == ActionType.Update)
                        {
                            <dd class="col-sm-4"><b>@tr.Get("Field")</b></dd>
                            <dd class="col-sm-4"><b>@tr.Get("OldData")</b></dd>
                            <dd class="col-sm-4"><b>@tr.Get("NewData")</b></dd>
                        }
                    }
                </dl>
            </div>
        </div>
    </div>
</div>
@await Html.PartialAsync("Partials/_TableHistoryActionButtons", Model)
<script>
    try {
         var oldData = JSON.parse('@Html.Raw(Model.OldData?.Replace("\\r\\n", ""))');
    } catch (err) {
    }
    try {
        var newData = JSON.parse('@Html.Raw(Model.NewData.Replace("\\r\\n", ""))');
    } catch (err) {
    }

    if (newData !== undefined) {
        $.each(newData, function (i, v) {
            if (oldData === undefined) {
                $("#data_row").append('<dd class="col-sm-6">' + i + '</dd><dd class="col-sm-6">' + v + '</dd>');
            } else {
                var alertClass = (v != oldData[i] ? " bg-warning" : "");
                $("#data_row").append('<dd class="col-sm-4' + alertClass + '">' + i + '</dd><dd class="col-sm-4' + alertClass + '">' + (oldData[i] != undefined ? oldData[i] : "null") + '</dd><dd class="col-sm-4' + alertClass + '">' + v + '</dd>');
            }
        });
    }
</script>