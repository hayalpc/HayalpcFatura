@model TableDefinitionVM
@{
    var isUpdate = Model != null && Model.Id > 0;
}

@using (Html.BeginForm(null, null, FormMethod.Post, new
{
    @id = "modelForm",
    @class = "form-horizontal",
    role = "form",
    //enctype = "multipart/form-data",
    autocomplete = "off"
}))
{
    @Html.AntiForgeryToken()
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <div class="col-sm-6">

            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">@tr.Get("GeneralInformation")</h3>
                </div>
                <div class="card-body">
                    @{
                        if (isUpdate)
                        {
                            <div class="form-group row">
                                <label asp-for="Status" class="col-sm-4"></label>
                                <div class="col-sm-8">
                                    <select asp-for="Status" class="form-control" asp-items="@(Html.GetEnumSelectList(typeof(Status)))">
                                        <option value="">@tr.Get("PleasePickOne")</option>
                                    </select>
                                    <span asp-validation-for="Status"></span>
                                </div>
                            </div>
                        }
                    }

                    <div class="form-group row">
                        @Html.LabelFor(m => m.ActionType, null, new { @class = "col-sm-4" })
                        <div class="col-sm-8">
                            @Html.DropDownListFor(m => m.ActionType, Html.GetEnumSelectList(typeof(ActionType)), tr.Get("PleasePickOne"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.ActionType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(m => m.ModelName, null, new { @class = "col-sm-4" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(x => x.ModelName, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.ModelName) })
                            @Html.ValidationMessageFor(m => m.ModelName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(m => m.Description, null, new { @class = "col-sm-4" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(x => x.Description, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.Description) })
                            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-sm-6">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">@tr.Get("ApproveInformation")</h3>
                </div>
                <div class="card-body">
                    <div class="form-group row">
                        @Html.LabelFor(m => m.RoleId1, null, new { @class = "col-sm-4" })
                        <div class="col-sm-8">
                            @Html.DropDownListFor(m => m.RoleId1, Enumerable.Empty<SelectListItem>(), tr.Get("PleasePickOne"), new { @class = "form-control select2 loadAjax", data_controller = "/role", data_default = Model.RoleId1 })
                            @Html.ValidationMessageFor(m => m.RoleId1, "", new { @class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(m => m.RoleId2, null, new { @class = "col-sm-4" })
                        <div class="col-sm-8">
                            @Html.DropDownListFor(m => m.RoleId2, Enumerable.Empty<SelectListItem>(), tr.Get("PleasePickOne"), new { @class = "form-control select2 loadAjax", data_controller = "/role", data_default = Model.RoleId2 })
                            @Html.ValidationMessageFor(m => m.RoleId2, "", new { @class = "text-danger"})
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="col-12">
            <div class="card">
                <div class="card-footer">
                    <a href="@RequestHelper.Referer" class="btn btn-info float-left">@tr.Get("GoBack")</a>
                    <button type="submit" class="btn btn-primary float-right">@tr.Get("Save")</button>
                </div>
            </div>
        </div>
    </div>
}
